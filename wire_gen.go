// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/heartBrokenGod/direference/config"
	"github.com/heartBrokenGod/direference/handler"
	"github.com/heartBrokenGod/direference/repository"
	"github.com/heartBrokenGod/direference/server"
	"github.com/heartBrokenGod/direference/service"
)

// Injectors from wire.go:

func InitServer() (server.Server, error) {
	userRepositoryImpl, err := repository.NewUserRepoImpl()
	if err != nil {
		return nil, err
	}
	userServiceImpl, err := service.NewUserServiceImpl(userRepositoryImpl)
	if err != nil {
		return nil, err
	}
	handlerImpl, err := handler.NewHandlerImpl(userServiceImpl)
	if err != nil {
		return nil, err
	}
	configConfig := config.NewConfig()
	serverImpl, err := server.NewServer(handlerImpl, configConfig)
	if err != nil {
		return nil, err
	}
	return serverImpl, nil
}

// wire.go:

var serverProviderSet = wire.NewSet(config.NewConfig, repository.NewUserRepoImpl, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)), service.NewUserServiceImpl, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)), handler.NewHandlerImpl, wire.Bind(new(handler.Handler), new(*handler.HandlerImpl)), server.NewServer, wire.Bind(new(server.Server), new(*server.ServerImpl)))
